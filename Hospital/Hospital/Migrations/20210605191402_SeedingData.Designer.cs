// <auto-generated />
using Hospital.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210605191402_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Hospital.Models.AppointmentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date_Time")
                        .HasColumnType("text");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientId");

                    b.HasIndex("PhysicianId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            ID = 772,
                            Date_Time = "10-12-2021 09:30AM",
                            PatientId = 1124398,
                            PhysicianId = 1110
                        },
                        new
                        {
                            ID = 733,
                            Date_Time = "03-09-2021 10:00AM",
                            PatientId = 1683398,
                            PhysicianId = 1113
                        },
                        new
                        {
                            ID = 992,
                            Date_Time = "09-02-2021 08:00AM",
                            PatientId = 1837354,
                            PhysicianId = 1119
                        },
                        new
                        {
                            ID = 338,
                            Date_Time = "11-07-2021 09:45AM",
                            PatientId = 1354922,
                            PhysicianId = 1180
                        },
                        new
                        {
                            ID = 334,
                            Date_Time = "30-05-2021 10:35AM",
                            PatientId = 1820336,
                            PhysicianId = 1151
                        },
                        new
                        {
                            ID = 177,
                            Date_Time = "20-11-2021 12:00PM",
                            PatientId = 1992755,
                            PhysicianId = 1180
                        },
                        new
                        {
                            ID = 886,
                            Date_Time = "19-10-2021 01:00PM",
                            PatientId = 1775342,
                            PhysicianId = 1111
                        });
                });

            modelBuilder.Entity("Hospital.Models.DepartmentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PhysicianId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 27,
                            Name = "Cardiology",
                            PhysicianId = 1113
                        },
                        new
                        {
                            ID = 66,
                            Name = "Internal medicine",
                            PhysicianId = 1111
                        },
                        new
                        {
                            ID = 90,
                            Name = "Anesthetics",
                            PhysicianId = 1151
                        },
                        new
                        {
                            ID = 44,
                            Name = "Emergency",
                            PhysicianId = 1113
                        },
                        new
                        {
                            ID = 20,
                            Name = "Neonatal",
                            PhysicianId = 1112
                        });
                });

            modelBuilder.Entity("Hospital.Models.PatientModel", b =>
                {
                    b.Property<int>("NationalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NationalID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            NationalID = 1122998,
                            Address = "Almoroj",
                            Gender = "F",
                            Name = "Sara"
                        },
                        new
                        {
                            NationalID = 1124398,
                            Address = "Almoroj",
                            Gender = "F",
                            Name = "Lama"
                        },
                        new
                        {
                            NationalID = 1683398,
                            Address = "Olia",
                            Gender = "M",
                            Name = "Saud"
                        },
                        new
                        {
                            NationalID = 1992755,
                            Address = "Alworod",
                            Gender = "M",
                            Name = "Fares"
                        },
                        new
                        {
                            NationalID = 1775342,
                            Address = "Alqadsiah",
                            Gender = "M",
                            Name = "Battal"
                        },
                        new
                        {
                            NationalID = 1883547,
                            Address = "Narjes",
                            Gender = "M",
                            Name = "Mohhamad"
                        },
                        new
                        {
                            NationalID = 1354922,
                            Address = "Qurtubah",
                            Gender = "F",
                            Name = "Fai"
                        },
                        new
                        {
                            NationalID = 1820336,
                            Address = "Alsalman",
                            Gender = "F",
                            Name = "Salwa"
                        },
                        new
                        {
                            NationalID = 1837354,
                            Address = "Alaziziah",
                            Gender = "F",
                            Name = "Lamees"
                        });
                });

            modelBuilder.Entity("Hospital.Models.PhysicianModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Physicians");

                    b.HasData(
                        new
                        {
                            Id = 1110,
                            Name = "Hossam",
                            Position = "Pediatrician",
                            gender = "M"
                        },
                        new
                        {
                            Id = 1111,
                            Name = "Saad",
                            Position = "Internist",
                            gender = "M"
                        },
                        new
                        {
                            Id = 1112,
                            Name = "John",
                            Position = "Peadiatric neurologist",
                            gender = "M"
                        },
                        new
                        {
                            Id = 1113,
                            Name = "Eman",
                            Position = "Cardiologist",
                            gender = "F"
                        },
                        new
                        {
                            Id = 1119,
                            Name = "Sara",
                            Position = "Psychiatrist",
                            gender = "F"
                        },
                        new
                        {
                            Id = 1117,
                            Name = "Hana",
                            Position = "Surgeon",
                            gender = "F"
                        },
                        new
                        {
                            Id = 1144,
                            Name = "Jason",
                            Position = "Dermatologist",
                            gender = "M"
                        },
                        new
                        {
                            Id = 1180,
                            Name = "Abrar",
                            Position = "Internist",
                            gender = "F"
                        },
                        new
                        {
                            Id = 1151,
                            Name = "Derek",
                            Position = "Surgeon",
                            gender = "M"
                        });
                });

            modelBuilder.Entity("Hospital.Models.AppointmentModel", b =>
                {
                    b.HasOne("Hospital.Models.PatientModel", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Models.PhysicianModel", "Physician")
                        .WithMany("appointments")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hospital.Models.DepartmentModel", b =>
                {
                    b.HasOne("Hospital.Models.PhysicianModel", "Physician")
                        .WithMany("Departments")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
